;*****************************************************************************
;; Call BIOS idle
;*****************************************************************************
bios_idle:
    int    PUSHALL_INT
    int    IDLE_INT
    int    POPALL_INT
    ret
;*****************************************************************************


;*****************************************************************************
;; Delay - call idle loop R0 times
;*****************************************************************************
delay:
    call   bios_idle
    subi   r0, 1
    jnz    delay
    ret
;*****************************************************************************


;*****************************************************************************
; mem_move
; r9 = dest, r8 = src, r1 = word count
;*****************************************************************************
mem_move:
@@:
    mov    w[r9++], w[r8++]	; copy data
    dec    r1
    jnz    @b
    ret
;*****************************************************************************


;*****************************************************************************
; subtract (16-bit)
; R1:R0 - R3:R2
;*****************************************************************************
subtract_16:
    push   r4
    xor    r4, r4
    sub    r0, r2 ; Subtract the lower halves.  This may "borrow" from the upper half.
    jnc    @f
    mov    r4, 1
@@:
    subb   r1, r3 ; Subtract the upper halves.
    jc     @f	  ; Carry set from subtracting upper halves?
    test   r4, 1  ; If not, see if carry was set from subtracting lower halves:
    jz     @f
    stc
@@:
    pop    r4
    ret
;*****************************************************************************
